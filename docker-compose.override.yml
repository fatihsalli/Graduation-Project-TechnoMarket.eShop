version: '3.8'

services:
  catalogdb:
    container_name: catalogdb
    restart: always
    ports:
      - "1433:1433"
    volumes:
      - catalogdb_volume:/var/opt/mssql
    environment:
      - ACCEPT_EULA=Y 
      - SA_PASSWORD=Password12* 
  customerdb:
    container_name: customerdb
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - customerdb_volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=admin 
      - POSTGRES_PASSWORD=Password12* 
      - POSTGRES_DB=customerdb
  orderdb:
    container_name: orderdb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - orderdb_volume:/data/db 
  basketdb:
    container_name: basketdb
    restart: always
    ports:
      - "6379:6379"
  userdb:
    container_name: userdb
    restart: always
    ports:
      - "1444:1433"
    volumes:
      - userdb_volume:/var/opt/mssql
    environment:
      - ACCEPT_EULA=Y 
      - SA_PASSWORD=Password12* 
  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
  catalog.api:
    container_name: catalog.api
    restart: on-failure
    depends_on:
      - catalogdb
      - rabbitmq
    ports:
      - "5011:80"  
    environment:
      - ASPNETCORE_ENVIRONMENT=Development     
      - RabbitMQUrl:rabbitmq
      - "ConnectionStrings:SqlServer=Server=catalogdb,1433;Database=catalogdb;TrustServerCertificate=True;User=sa; Password=Password12*;"
  order.api:
    container_name: order.api
    restart: on-failure
    depends_on:
      - orderdb
      - rabbitmq
    ports:
      - "5012:80"  
    environment:
      - ASPNETCORE_ENVIRONMENT=Development     
      - RabbitMQUrl:rabbitmq
      - OrderDatabaseSettings:ConnectionString=mongodb://customerdb:27017
  customer.api:
    container_name: customer.api
    restart: on-failure
    depends_on:
      - customerdb
    ports:
      - "5013:80"  
    environment:
      - ASPNETCORE_ENVIRONMENT=Development     
      - "ConnectionStrings:PostreSql=User ID=admin;Password=Password12*;Server=customerdb;Port=5432;Database=customerdb;Integrated Security=true;Pooling=true;"
  basket.api:
    container_name: basket.api
    restart: on-failure
    depends_on:
      - basketdb
      - rabbitmq
    ports:
      - "5014:80"  
    environment:
      - ASPNETCORE_ENVIRONMENT=Development     
      - RabbitMQUrl:rabbitmq
      - RedisSettings:Port=6379
      - RedisSettings:Host=basketdb
  photostock.api:
    container_name: photostock.api
    restart: on-failure
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "5015:80"
    volumes:
      - type: bind
        source: C:\Users\salli\OneDrive\Masaüstü\photos
        target: /app/wwwroot/photos
  gateway.api:
    container_name: gateway.api
    restart: on-failure
    depends_on:
      - catalog.api
      - order.api
      - customer.api
      - basket.api
      - photostock.api
    ports:
      - "5000:80"  
    environment:
      - ASPNETCORE_ENVIRONMENT=Production     
  shopping_aggregator.api:
    container_name: shopping_aggregator.api
    restart: on-failure
    depends_on:
      - catalog.api
      - order.api
      - customer.api
      - basket.api
      - photostock.api
    ports:
      - "5001:80"  
    environment:
      - ASPNETCORE_ENVIRONMENT=Development 
      - ApiSettings:CatalogUrl=http://catalog.api
      - ApiSettings:OrderUrl=http://order.api
      - ApiSettings:CustomerUrl=http://customer.api
      - ApiSettings:BasketUrl=http://basket.api
  aspnetcoremvc.web:
    container_name: aspnetcoremvc.web
    restart: on-failure
    depends_on:
      - userdb
      - gateway.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ServiceApiSettings:GatewayBaseUri=http://gateway.api
      - ServiceApiSettings:PhotoStockUri=http://photostock.api
      - "ConnectionStrings:SqlServer=Server=userdb,1444;Database=userdb;TrustServerCertificate=True;User=sa; Password=Password12*;"
    ports:
      - "5010:80"
